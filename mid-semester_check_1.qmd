---
title: "Mid-semester check-in: Part I"
format: gfm
editor: 
  markdown: 
    wrap: 72
---

0.  Load libraries 
```{r,message=FALSE,warning=FALSE}
rm(list=ls())
library(tidyverse) 
library(dplyr)
library(nycflights13)
```

1.  Calculate the average and standard deviation of flight delays for
    each airline, *counting only those flights that were delayed longer
    than an hour*. 
```{r, message=FALSE, warning=FALSE}

 #Easy way, using just arrival delays
 flightstats_Arrival<- flights |>
  filter(!is.na(arr_delay), arr_delay>= 60)|>
  group_by(carrier)|>
  summarize("Mean Delay" = mean(arr_delay), "STD" = sd(arr_delay))
  
 #Overkill way, using both arrival and departure delays
 flightstats_Delay<- flights |>
   filter(!is.na(arr_delay), !is.na(dep_delay), arr_delay >=60 | dep_delay >= 60)|>
   pivot_longer(cols = contains("delay"), names_to= "Arrival or Departure", values_to = "Time")|>
   group_by(carrier)|>
   summarize("Mean Delay" = mean(Time), "STD" = sd(Time))
  
```

2.  Identify the 5 flights (i.e., unique combination of `carrier` and
    `flight`) that are most frequently delayed more than a half hour.
    Comment: The output is the same whether answered via arrival delay or departure delay
```{r}
#How to use reduce(rbind, by()) in a pipe?

#Based on arrival delay
filterstats_5toparr <- flights|>
  filter(!is.na(arr_delay), !is.na(dep_delay), arr_delay >=30 | dep_delay >= 30)|>
  select(carrier,flight,dep_delay,arr_delay)|>
  count(carrier,flight, sort=TRUE)|>
  head(arr_delay,n=5)

#Based on departure delay
filterstats_5topdep <- flights|>
  filter(!is.na(dep_delay), dep_delay >= 30)|>
  select(carrier,flight,dep_delay)|>
  count(carrier,flight, sort=TRUE)|>
  head(dep_delay,n=5)


#Overkill way
filterstats_5topoverkill <- flights|>
  filter(!is.na(arr_delay), !is.na(dep_delay), arr_delay >=30 | dep_delay >= 30)|>
  select(carrier,flight,dep_delay,arr_delay)|>
  pivot_longer(cols = contains("delay"), names_to= "Arrival or Departure", values_to = "Time")|>
  count(carrier,flight, sort=TRUE)|>
  head(`Most Frequently Delayed`,n=5)

```

3.  Make a plot of the distribution of flight times for each airline.
    The plot should show summary statistics in some way (e.g. median,
    upper and lower quartiles; you can choose which summary statistics
    are best) as well as individual data points. Order the x axis in
    order of median flight time, from highest on the left to lowest on
    the right.
```{r, warnings=FALSE, message=FALSE}
plotdata <- flights |>
  select(carrier, flight, air_time)|>
  filter(!is.na(carrier),!is.na(flight),!is.na(air_time))|>
  group_by(carrier)

#Subset df for individual data point visualization
#reordered so that by picking every 20th its not skewing data
tenth<- plotdata |>
  with(plotdata, reorder(carrier, air_time, median))|>
  filter(row_number() %% 20 == 1)

ggplot(data=plotdata,mapping = aes(fct_reorder(.f=carrier,.x=desc(air_time),.fun=median),air_time))+
  geom_boxplot(size=0, alpha=0)+
  geom_jitter(data=tenth, aes(carrier,air_time), size=0.1,alpha=0.1)+
  xlab("Airline Carrier")+ 
  ylab("Air Time")+
  ggtitle("Distribution of flight time by airline")+
  theme_minimal()


```

